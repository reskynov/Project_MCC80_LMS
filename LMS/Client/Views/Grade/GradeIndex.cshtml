@model IEnumerable<Client.ViewModels.UserTasks.GetTaskToGradeVM>

@{
    ViewData["Title"] = "Grade Student";
    Layout = "_DashboardLayout";
}

@foreach (var item in Model){
    <h1 style="color:white;">@Html.DisplayFor(modelItem => item.LessonName)</h1>
    <h6 style="color:white;">Deadline : @Html.DisplayFor(modelItem => item.DeadlineDate)</h6>
    break;
}
@if (User.IsInRole("Teacher"))
{
    <div class="container ms-0 me-0 ps-0">
        <div class="row">
            <div class="col-12">
                <div class="card mb-4">
                    <div class="card-body px-0 pt-0 pb-2">
                        <div class="table-responsive p-0">
                            <table id="myTableClassroom" class="table align-items-center mb-0 table-hover">
                                <thead>
                                    <tr>
                                        @*<th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">No</th>*@
                                        <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Student Name</th>
                                        <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Attachment</th>
                                        <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Submitted Date</th>
                                        <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Grade</th>
                                        <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @*@{
                                        int i = 1;
                                    }*@
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            @*<td>
                                                @(
                                            i++
                                            )
                                            </td>*@
                                            <td>
                                                @Html.DisplayFor(modelItem => item.StudentName)
                                            </td>
                                            <td class="justify-content-center" style="max-width: 50px; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;">
                                                <a href="@Html.DisplayFor(modelItem => item.SubmittedTask)" class="btn btn-outline-success my-auto">Link Attachment</a>
                                            </td>
                                            <td>
                                                @if (item.SubmittedTaskDate < item.DeadlineDate)
                                                {
                                                    <a style="color: #32CD32;">@Html.DisplayFor(modelItem => item.SubmittedTaskDate)</a>
                                                }else if(item.SubmittedTaskDate > item.DeadlineDate)
                                                {
                                                    <a style="color: #900C3F;">@Html.DisplayFor(modelItem => item.SubmittedTaskDate)</a>
                                                }
                                            </td>
                                            <td>
                                                @if(item.Grade == null)
                                                {
                                                    <p>-</p>
                                                }else if(item.Grade != null)
                                                {
                                                    @Html.DisplayFor(modelItem => item.Grade)
                                                }
                                            </td>
                                            <td>
                                                <button onclick="ShowUserTask('@item.UserTaskGuid')" data-bs-toggle="modal" data-bs-target="#modalGrade" class="btn btn-primary my-auto"><i class="fa-solid fa-pen "></i>  Grading</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*----------------------------MODAL UPDATE GRADE----------------------------*@
    <div class="modal" tabindex="-1" id="modalGrade">
        <div class="modal-dialog  modal-dialog-centered ms-auto">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Grading</h5>
                    <button type="button" class="btn btn-danger btn-close bg-danger" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body row">
                    <div class="col">
                        <form id="addGradeForm">
                            <div class="mb-3">
                                <input type="hidden" class="form-control" id="guidLessonUserTask" name="guidLessonUserTask">
                            </div>
                            <div class="mb-3">
                                <label for="gradeUserTask" class="form-label">Attachment</label>
                                <textarea class="form-control" id="submittedTaskUserTask" name="submittedTaskUserTask" readonly></textarea>
                            </div>
                            <div class="mb-3">
                                <label for="gradeusertask" class="form-label">grade</label>
                                <input type="number" min="0" max="100" class="form-control" id="gradeusertask" name="gradeusertask" required>
                                @*<span asp-validation-for="Grade" class="text-danger"></span>*@
                            </div>
                        </form>
                    </div>
                </div>
                <div class="modal-header">
                    <button onclick="UpdateGrade()" type="button" id="btnSave" class="btn btn-primary mx-auto">Save</button>
                </div>
            </div>
        </div>
    </div>
    
}
@*<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LessonGuid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LessonName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StudentName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSubmitted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserTaskGuid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubmittedTask)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Grade)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LessonGuid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LessonName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSubmitted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserTaskGuid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubmittedTask)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Grade)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>*@

@section Scripts {
    <script src="~/js/grade.js" asp-append-version="true"></script>
}