@model IEnumerable<Client.ViewModels.UserTasks.GetTaskToGradeVM>
@using System.Net.Http

@{
    ViewData["Title"] = "Grade Student";
    Layout = "_DashboardLayout";
}

@foreach (var item in Model)
{
        <h1 style="color:white;">@Html.DisplayFor(modelItem => item.LessonName)</h1>
        <h6 style="color:white;">Deadline : @Html.DisplayFor(modelItem => item.DeadlineDate)</h6>
    break;
}
@if (User.IsInRole("Teacher"))
{
        <div class="container ms-0 me-0 ps-0">
            <div class="row">
                <div class="col-12">
                    <div class="card mb-4">
                        <div class="card-body px-0 pt-0 pb-2">
                            <div class="table-responsive p-0">
                                <table id="myTableClassroom" class="table align-items-center mb-0 table-hover">
                                    <thead>
                                        <tr>
                                            <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">No</th>
                                            <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Student Name</th>
                                            <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Attachment</th>
                                            <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Submitted Date</th>
                                            <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Grade</th>
                                            <th class="text-center text-uppercase text-secondary text-xs font-weight-bolder opacity-7">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @{
                                        int i = 1;
                                    }
                                    @foreach (var item in Model)
                                    {
                                                <tr>
                                            <td>
                                                @(
                                            i++
                                            )
                                            </td>
                                                    <td>
                                                         @Html.DisplayFor(modelItem => item.StudentName)
                                                    </td>
                                                    <td class="justify-content-center" style="max-width: 50px; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;">
                                                @if (item.SubmittedTask == null)
                                                {
                                                    <div class="d-flex justify-content-start card btn disabled" style="max-width:242px;outline-style: solid; outline-color:#948dd0; outline-width: 0.2px;">
                                                        <a class="m-0 " href="@Url.Action("DownloadLesson", "Grade", new { fileName = @Html.DisplayFor(modelItem => item.SubmittedTask) })" style="text-align:start; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;">
                                                            <i class="fa-solid fa-file"></i> @Html.DisplayFor(modelItem => item.SubmittedTask)
                                                        </a>
                                                    </div>
                                                    @*<a href="@Html.DisplayFor(modelItem => item.SubmittedTask)" class="btn btn-outline-secondary my-auto disabled my-auto" aria-disabled="true">Attachment</a>*@
                                                }
                                                else if(item.SubmittedTask != null){
                                                    <div class="d-flex justify-content-start card btn" style="max-width:242px;outline-style: solid; outline-color:#948dd0; outline-width: 0.2px;">
                                                        <a class="m-0 " href="@Url.Action("DownloadTask", "Classroom", new { fileName = item.SubmittedTask })" style="text-align:start; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;">
                                                            <i class="fa-solid fa-file"></i> @Html.DisplayFor(modelItem => item.SubmittedTask)
                                                        </a>
                                                    </div>
                                                    @*<a href="@Html.DisplayFor(modelItem => item.SubmittedTask)" class="btn btn-outline-success my-auto">Attachment</a>*@
                                                }
                                            </td>
                                                    <td>
                                                        @if (item.SubmittedTaskDate < item.DeadlineDate)
                                                        {
                                                    <a style="color: #32CD32;">@Html.DisplayFor(modelItem => item.SubmittedTaskDate) <i class="fa-solid fa-circle-check" data-bs-toggle="tooltip" data-bs-placement="top" title="On Time"></i></a>
                                                        }
                                                        else if (item.SubmittedTaskDate > item.DeadlineDate)
                                                        {
                                                    <a style="color: #900C3F;">@Html.DisplayFor(modelItem => item.SubmittedTaskDate) <i class="fa-solid fa-circle-exclamation" data-bs-toggle="tooltip" data-bs-placement="top" title="Overdue"></i></a>
                                                }
                                                else if (item.SubmittedTask is null)
                                                {
                                                    <h6 style="color: #900C3F;" data-bs-toggle="tooltip" data-bs-placement="top" title="Not Submitted">X</h6>
                                                }
                                            </td>
                                                    <td>
                                                @if (item.Grade == null)
                                                {
                                                    <h6>—</h6>
                                                }
                                                else if (item.Grade != null)
                                                {
                                                    @Html.DisplayFor(modelItem => item.Grade)
                                                }
                                                    </td>
                                                    <td>
                                                        @if (item.SubmittedTask == null){
                                                    <button onclick="ShowUserTask('@item.UserTaskGuid')" data-bs-toggle="modal" data-bs-target="#modalGrade" class="btn btn-secondary my-auto disabled" style="color:white;" aria-disabled="true"><i class="fa-solid fa-pen "></i>  Grading</button>
                                                }
                                                else if (item.SubmittedTask != null)
                                                {
                                                    <button onclick="ShowUserTask('@item.UserTaskGuid')" data-bs-toggle="modal" data-bs-target="#modalGrade" class="btn btn-primary my-auto"><i class="fa-solid fa-pen "></i>  Grading</button>
                                                }
                                                    </td>
                                                </tr>

                                        @*----------------------------MODAL UPDATE GRADE----------------------------*@
                                        <div class="modal" tabindex="-1" id="modalGrade">
                                            <div class="modal-dialog  modal-dialog-centered ms-auto">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="staticBackdropLabel">Grading</h5>
                                                        <button type="button" class="btn btn-danger btn-close bg-danger" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body row">
                                                        <div class="col">
                                                            <form id="addGradeForm">
                                                                <div class="mb-3">
                                                                    <input type="hidden" class="form-control" id="guidLessonUserTask" name="guidLessonUserTask">
                                                                </div>
                                                                <div class="mb-3">
                                                                    <label for="gradeUserTask" class="form-label">Attachment</label>
                                                                    <textarea class="form-control" id="submittedTaskUserTask" name="submittedTaskUserTask" readonly></textarea>
                                                                </div>
                                                                <div class="d-flex justify-content-start card btn" style="max-width:242px;outline-style: solid; outline-color:#948dd0; outline-width: 0.2px;">
                                                                    <a class="m-0 " href="@Url.Action("DownloadTask", "Classroom", new { fileName = item.SubmittedTask })" style="text-align:start; text-overflow: ellipsis; overflow: hidden; white-space: nowrap;">
                                                                        <i class="fa-solid fa-file"></i> @Html.DisplayFor(modelItem => item.SubmittedTask)
                                                                    </a>
                                                                </div>
                                                                <div class="mb-3">
                                                                    <label for="gradeusertask" class="form-label">Grade</label>
                                                                    <input type="number" min="0" max="100" class="form-control" id="gradeusertask" name="gradeusertask" required>
                                                                    @*<span asp-validation-for="Grade" class="text-danger"></span>*@
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                    <div class="modal-header">
                                                        <button onclick="UpdateGrade()" type="button" id="btnSave" class="btn btn-primary mx-auto">Save</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

}
@section Scripts {
    <script>   
    $(document).ready(function () {
                $('#myTableClassroom').DataTable({
                    dom: 'Blfrtip',
                    buttons: [
                        {
                            extend: 'csv',
                            text: '<i class="fa fa-file-text-o"></i>',
                            className: "btn btn-primary"

                        },
                        {
                            extend: 'excel',
                            text: '<i class="fa fa-file-excel-o"></i>',
                            className: "btn btn-primary"

                        },
                        {
                            extend: 'pdf',
                            text: '<i class="fa fa-file-pdf-o"></i>',
                            orientation: 'landscape',
                            pageSize: 'A4',
                            className: "btn btn-primary"
                        },
                        {
                            extend: 'copy',
                            text: '<i class="fa fa-files-o"></i>',
                            className: "btn btn-primary"
                        }

                    ]
                });
            });
    </script>

    <script>
        const Token = '@Context.Session.GetString("JWToken")';
    </script>

    <script src="~/js/grade.js" asp-append-version="true"></script>
}