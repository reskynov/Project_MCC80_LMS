@model IEnumerable<Client.ViewModels.Classrooms.ClassroomPeopleVM>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.IsInRole("Teacher"))
{
    <div class="modal" tabindex="-1" id="modalDetailStudent">
        <div class="modal-dialog  modal-dialog-centered ms-auto">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Create Classroom</h5>
                    <button type="button" class="btn btn-danger btn-close bg-danger" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body row">
                    <div class="col">
                        <form id="addClassroomForm">
                            <div class="mb-3">
                                <label for="nameClassroom" class="form-label">Classroom Name</label>
                                <input type="text" class="form-control" id="nameClassroom" name="NameClassroom" required>
                            </div>
                            <div class="mb-3">
                                <label for="descriptionClassroom" class="form-label">Description</label>
                                <input type="text" class="form-control" id="descriptionClassroom" name="descriptionClassroom" required>
                            </div>
                            <div class="mb-3">
                                <input type="hidden" class="form-control" id="teacherGuidClassroom" name="teacherGuidClassroom" value="@User.FindFirst("Guid").Value" readonly>
                            </div>
                            <!-- Add other input fields as needed -->
                        </form>
                    </div>
                </div>
                <div class="modal-header">
                    <button onclick="InsertClassroom()" type="button" id="btnSave" class="btn btn-primary mx-auto">Save</button>
                </div>
            </div>
        </div>
    </div>
}
<table class="table">
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Guid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
